name: Build And Deploy PROD

on:
  push:
    branches: 
      - main
      - dev

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    outputs:
      imageName : ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      imageDigest: ${{ steps.push.outputs.digest }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
              type=raw,priority=1000,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
              type=raw,priority=1000,value=dev,enable=${{ github.ref == format('refs/heads/{0}', 'dev') }}
              type=sha,enable=true,priority=100,prefix=sha-,suffix=,format=short
          
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }} 
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
        

  deploy-prod:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    if : github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: updating prod deployment
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_SERVER_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: cd containers/bea-fe/ && docker compose pull && docker rollout -f compose.yaml bea

  deploy-dev:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    if : github.ref == 'refs/heads/dev'
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: updating dev deployment
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_SERVER_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: cd containers/bea-fe/ && docker compose pull && docker rollout -f compose.yaml bea-dev